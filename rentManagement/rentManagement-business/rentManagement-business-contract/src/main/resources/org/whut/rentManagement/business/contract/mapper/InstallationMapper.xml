<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.whut.rentManagement.business.contract.mapper.InstallationMapper">
    <sql id="Installation_fields">
          ID,CONTRACTID,TYPE,INSTALLMAN,INSTALLTIME,INSTALLSTATUS,IMAGE,APPID
    </sql>
    <resultMap id="InstallationResultMap" type="Installation">
        <id property="id" column="ID" />
        <result property="contractId" column="CONTRACTID"/>
        <result property="type" column="TYPE"/>
        <result property="installMan" column="INSTALLMAN"/>
        <result property="installTime" column="INSTALLTIME"/>
        <result property="installStatus" column="INSTALLSTATUS"/>
        <result property="image" column="IMAGE"/>
        <result property="appId" column="APPID"/>
    </resultMap>
    <insert id="add" parameterType="Installation"  keyProperty="id"
            useGeneratedKeys="true">

        INSERT INTO
        installation(
        <include refid="Installation_fields" />
        )
        VALUES (#{id}, #{contractId},#{type},#{installMan},#{installTime},#{installStatus},#{image},#{appId});
        <selectKey resultType="long" keyProperty="id">
            select
            LAST_INSERT_ID() as id
        </selectKey>
    </insert>
<!--    <select id="getListByAppId" parameterType="java.lang.Long" resultMap="InstallationResultMap">
        select *
        from installation
        where APPID=#{appId}
    </select>-->
    <select id="getListByAppId" parameterType="java.lang.Long" resultType="Map">
           select c.name contractName,i.type,i.installMan,i.installTime,i.installStatus,i.id
           from  installation AS i,contract AS c
           where i.appId=#{appId} AND i.contractId=c.id
    </select>
    <update id="update" parameterType="Installation">
        UPDATE installation
        <set>
            <if test="type!=null">TYPE=#{type},</if>
            <if test="installMan!=null">INSTALLMAN=#{installMan},</if>
            <if test="installStatus!=null">INSTALLSTATUS=#{installStatus},</if>
            <if test="image!=null">IMAGE=#{image},</if>
        </set>
        WHERE ID=#{id}
    </update>
    <delete id="delete" parameterType="Installation">
        DELETE from installation
        <where>
            <if test="id!=null">ID=#{id}</if>
        </where>
    </delete>

    <select id="findByCondition" parameterType="map" resultType="map">
        select installation.*,contract.name,customer.name as customerName
        from installation
        LEFT JOIN contract ON installation.contractId=contract.id
        LEFT JOIN customer ON contract.customerId=customer.id
        <where>
            <if test="appId!=null"> installation.APPID=#{appId}</if>
            <if test="user!=null">AND installation.installMan like CONCAT('%',#{user},'%') </if>
            <if test="device!=null">AND contract.name like CONCAT('%',#{device},'%')</if>
            <if test="startTime!=null"><![CDATA[ AND installation.installTime>=#{startTime}]]></if>
            <if test="endTime!=null"><![CDATA[ AND installation.installTime<=#{endTime} ]]> </if>
        </where>
        order by installation.id desc
    </select>

    <select id="getInfo" parameterType="map" resultType="map">
        select installation.*,contract.name as contractName,customer.name as customerName
        from installation
        LEFT JOIN contract ON installation.contractId=contract.id
        LEFT JOIN customer ON contract.customerId=customer.id
        <where>
            <if test="appId!=null">installation.APPID=#{appId}</if>
            <if test="installationId!=null">AND installation.id=#{installationId}</if>
        </where>
        order by installation.id desc
    </select>

    <select id="getListByContractId" parameterType="map" resultType="Map">
        select installation.*,contract.name as contractName,customer.name as customerName
        from installation
        LEFT JOIN contract ON installation.contractId=contract.id
        LEFT JOIN customer ON contract.customerId=customer.id
        <where>
            <if test="appId!=null">installation.appId=#{appId}</if>
            <if test="contractId!=null">AND installation.contractId=#{contractId}</if>
        </where>
        order by installation.id desc
    </select>
</mapper>